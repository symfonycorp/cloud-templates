requirements:
  - type: file_exists
    value: composer.json
  - type: has_composer_package
    value: symfony/flex

template: |
    name: {{.Slug}}

    type: php:{{.PhpVersion}}

    runtime:
        extensions:
            {{ if php_extension_available "apcu" $.PhpVersion -}}
            - apcu
            {{ end -}}
            {{- if php_extension_available "mbstring" $.PhpVersion -}}
            - mbstring
            {{ end -}}
            {{- if php_extension_available "sodium" $.PhpVersion -}}
            - sodium
            {{ end -}}
            {{ range $ext := php_extensions -}}
            {{- if php_extension_available $ext $.PhpVersion -}}
            - {{ $ext }}
            {{ end -}}
            {{- end }}

    #variables:
    #    php:
    #        # uncomment on PHP 7.4+
    #        #opcache.preload: config/preload.php

    build:
        flavor: none

    disk: 512

    web:
        locations:
            "/":
                root: "{{.PublicDirectory}}"
                expires: 1h
                passthru: "/{{.FrontController}}"

    {{ if has_composer_package "symfony/messenger" -}}
    workers:
        messenger:
            # PHP background workers usually don't require much CPU. See
            # https://symfony.com/doc/current/cloud/cookbooks/resources_allocation.html
            # for more information
            size: XS
            resources:
                base_memory: 64 # Keep in sync with the `memory-limit` flag value
                memory_ratio: 128
            commands:
                # Don't forget to update your receiver name(s)
                start: symfony console --time-limit=3600 --memory-limit=64M messenger:consume async
    {{- end }}

    mounts:
        "/var/cache": { source: local, source_path: var/cache }
        {{ if file_exists "templates/debug/source_code.html.twig" -}}
        "/data": { source: local, source_path: "data" }
        {{- end }}

    hooks:
        build: |
            set -x -e

            curl -fs https://get.symfony.com/cloud/configurator | bash
            {{ range $ext := php_extensions -}}
            {{- if not (php_extension_available $ext $.PhpVersion) -}}
            # php-ext-install {{ $ext }} X.Y.Z
            {{ end -}}
            {{- end }}
            NODE_VERSION=22 symfony-build

        deploy: |
            set -x -e

            symfony-deploy

    crons:
        security-check:
            # Check that no security issues have been found for PHP packages deployed in production
            spec: '50 23 * * *'
            cmd: if [ "$PLATFORM_ENVIRONMENT_TYPE" = "production" ]; then croncape COMPOSER_ROOT_VERSION=1.0.0 COMPOSER_AUDIT_ABANDONED=ignore composer audit --no-cache; fi
        clean-expired-sessions:
            spec: '17,47 * * * *'
            cmd: croncape php-session-clean
